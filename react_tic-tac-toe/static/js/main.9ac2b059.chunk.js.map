{"version":3,"sources":["index.js"],"names":["Square","props","Board","i","value","this","squares","onClick","className","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","squares_","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAkBA,SAASA,EAAOC,I,IASVC,E,2KACSC,GAAI,IAAD,OACd,OACE,kBAACH,EAAD,CACEI,MAAOC,KAAKJ,MAAMK,QAAQH,GAC1BI,QAAS,kBAAM,EAAKN,MAAMM,QAAQJ,Q,+BAMtC,OACE,6BACE,yBAAKK,UAAU,aACZH,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,IAErB,yBAAKD,UAAU,aACZH,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,IAErB,yBAAKD,UAAU,aACZH,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CACP,CACER,QAASS,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GATM,E,wDAaPf,GACV,IAAMW,EAAUT,KAAKQ,MAAMC,QAAQK,MAAM,EAAGd,KAAKQ,MAAMI,WAAa,GAE9DG,EADUN,EAAQA,EAAQO,OAAS,GAChBf,QAAQa,QAC7BG,EAAgBF,IAAaA,EAASjB,KAG1CiB,EAASjB,GAAKE,KAAKQ,MAAMK,QAAU,IAAM,IACzCb,KAAKkB,SAAS,CACZT,QAASA,EAAQU,OAAO,CAAC,CAAElB,QAASc,KACpCH,WAAYH,EAAQO,OACpBH,SAAUb,KAAKQ,MAAMK,a,6BAIlBO,GACLpB,KAAKkB,SAAS,CACZN,WAAYQ,EACZP,QAASO,EAAO,IAAM,M,+BAGhB,IAcJC,EAdG,OACDZ,EAAUT,KAAKQ,MAAMC,QACrBa,EAAUb,EAAQT,KAAKQ,MAAMI,YAC7BW,EAASN,EAAgBK,EAAQrB,SAEjCuB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,oBAC5C,OACE,wBAAIE,IAAKF,GACP,4BAAQxB,QAAS,kBAAM,EAAK2B,OAAOH,KAAQC,OAWjD,OAJEN,EADEE,EACO,WAAaA,EAEb,iBAAmBvB,KAAKQ,MAAMK,QAAU,IAAM,KAGvD,yBAAKV,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACN,EAAD,CACEI,QAASqB,EAAQrB,QACjBC,QAAS,SAACJ,GAAD,OAAO,EAAKgC,YAAYhC,OAGrC,yBAAKK,UAAU,aACb,6BAAMkB,GACN,4BAAKG,S,GAjEInB,IAAMC,WAwEzB,SAASW,EAAgBhB,GAavB,IAZA,IAAM8B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAEP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAjC,EAAI,EAAGA,EAAIiC,EAAMf,OAAQlB,IAAK,CAAC,IAAD,cACnBiC,EAAMjC,GADa,GAC9BkC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjC,EAAQ+B,IAAM/B,EAAQ+B,KAAO/B,EAAQgC,IAAMhC,EAAQ+B,KAAO/B,EAAQiC,GACpE,OAAOjC,EAAQ+B,GAGnB,OAAO,KAITG,IAASC,OAAO,kBAAC7B,EAAD,MAAU8B,SAASC,eAAe,W","file":"static/js/main.9ac2b059.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\n// class Square extends React.Component {\r\n//   // TODO: remove the constructor\r\n\r\n//   render() {\r\n//     // TODO: use onClick={this.props.onClick}\r\n//     // TODO: replace this.state.value with this.props.value\r\n//     return (\r\n//       <button className=\"square\" onClick={() => this.props.onClick()}>\r\n//         {this.props.value}\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\n\r\nfunction Square(props) {\r\n  return (\r\n    // <button className=\"square\" onClick={() => props.onClick()}>\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares_ = current.squares.slice();\r\n    if (calculateWinner(squares_) || squares_[i]) {\r\n      return;\r\n    }\r\n    squares_[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares: squares_ }]), //外面的()是function call, []是因为history是[]要concat[], {}是对内容打包\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to games start\"; //description\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}